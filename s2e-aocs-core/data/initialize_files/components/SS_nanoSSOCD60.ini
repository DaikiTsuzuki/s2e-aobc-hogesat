[SUNSENSOR1]
prescaler = 1;

//機体座標系(B)→センサ座標系(C)変換Quaternion
//センサ座標系(C)はセンサの真の座標系であり，ミスアライメントもこれに含まれる．
//例えば，機体座標系(B)→センサ設計座標系(D)→センサ真の座標系(C)とする場合，
//q_b2cは機体座標系(B)からセンサ設計座標系(D)への座標変換をしたのち，センサ設計座標系から真の座標系(C)への変換を行う．
// 視線PZ方向
q_b2c(0) = 0.0
q_b2c(1) = 0.0
q_b2c(2) =-0.70710678118
q_b2c(3) = 0.70710678118

//太陽検出可能な視野角[deg]
detectable_angle_deg = 60.0

//ガウスノイズ標準偏差[deg]
//Precision <0.1deg (3σと想定)
ss_wnvar = 0.1

//バイアスノイズ標準偏差[deg]
//シミュレーション開始時に以下の値を標準偏差としてバイアスノイズが設定される
//その後は一定のバイアスノイズとして加算される
//Accuracy 0.5deg (3σ)
ss_bivar = 0.5

// Threshold of light-receiving intensity[%] 
// Defined as a percentage to the solar constant
// If it becomes smaller than this, it becomes impossible to get the sun direction
intensity_lower_threshold_percent = 30.0

// Power Port
minimum_voltage = 3.3 // V
assumed_power_consumption = 0.07 //W

[SUNSENSOR2]
prescaler = 1;
//機体座標系(B)→センサ座標系(C)変換Quaternion
//センサ座標系(C)はセンサの真の座標系であり，ミスアライメントもこれに含まれる．
//例えば，機体座標系(B)→センサ設計座標系(D)→センサ真の座標系(C)とする場合，
//q_b2cは機体座標系(B)からセンサ設計座標系(D)への座標変換をしたのち，センサ設計座標系から真の座標系(C)への変換を行う．
// 視線PY方向
q_b2c(0) =-0.70710678118
q_b2c(1) = 0.0
q_b2c(2) = 0.0
q_b2c(3) = 0.70710678118

//太陽検出可能な視野角[deg]
detectable_angle_deg = 60.0

//ガウスノイズ標準偏差[deg]
//Precision <0.1deg (3σと想定)
ss_wnvar = 0.1

//バイアスノイズ標準偏差[deg]
//シミュレーション開始時に以下の値を標準偏差としてバイアスノイズが設定される
//その後は一定のバイアスノイズとして加算される
//Accuracy 0.5deg (3σ)
ss_bivar = 0.5

// Threshold of light-receiving intensity[%] 
// Defined as a percentage to the solar constant
// If it becomes smaller than this, it becomes impossible to get the sun direction
intensity_lower_threshold_percent = 30.0

// Power Port
minimum_voltage = 3.3 // V
assumed_power_consumption = 0.07 //W

[SUNSENSOR3]
prescaler = 1;
//機体座標系(B)→センサ座標系(C)変換Quaternion
//センサ座標系(C)はセンサの真の座標系であり，ミスアライメントもこれに含まれる．
//例えば，機体座標系(B)→センサ設計座標系(D)→センサ真の座標系(C)とする場合，
//q_b2cは機体座標系(B)からセンサ設計座標系(D)への座標変換をしたのち，センサ設計座標系から真の座標系(C)への変換を行う．
// 視線MZ方向
q_b2c(0) =-0.70710678118
q_b2c(1) = 0.70710678118
q_b2c(2) = 0.0
q_b2c(3) = 0.0

//太陽検出可能な視野角[deg]
detectable_angle_deg = 60.0

//ガウスノイズ標準偏差[deg]
//Precision <0.1deg (3σと想定)
ss_wnvar = 0.1

//バイアスノイズ標準偏差[deg]
//シミュレーション開始時に以下の値を標準偏差としてバイアスノイズが設定される
//その後は一定のバイアスノイズとして加算される
//Accuracy 0.5deg (3σ)
ss_bivar = 0.5

// Threshold of light-receiving intensity[%] 
// Defined as a percentage to the solar constant
// If it becomes smaller than this, it becomes impossible to get the sun direction
intensity_lower_threshold_percent = 30.0

// Power Port
minimum_voltage = 3.3 // V
assumed_power_consumption = 0.07 //W

[SUNSENSOR4]
prescaler = 1;
//機体座標系(B)→センサ座標系(C)変換Quaternion
//センサ座標系(C)はセンサの真の座標系であり，ミスアライメントもこれに含まれる．
//例えば，機体座標系(B)→センサ設計座標系(D)→センサ真の座標系(C)とする場合，
//q_b2cは機体座標系(B)からセンサ設計座標系(D)への座標変換をしたのち，センサ設計座標系から真の座標系(C)への変換を行う．
// 視線MY方向
q_b2c(0) = 0.0
q_b2c(1) = 0.70710678118
q_b2c(2) =-0.70710678118
q_b2c(3) = 0.0

//太陽検出可能な視野角[deg]
detectable_angle_deg = 60.0

//ガウスノイズ標準偏差[deg]
//Precision <0.1deg (3σと想定)
ss_wnvar = 0.1

//バイアスノイズ標準偏差[deg]
//シミュレーション開始時に以下の値を標準偏差としてバイアスノイズが設定される
//その後は一定のバイアスノイズとして加算される
//Accuracy 0.5deg (3σ)
ss_bivar = 0.5

// Threshold of light-receiving intensity[%] 
// Defined as a percentage to the solar constant
// If it becomes smaller than this, it becomes impossible to get the sun direction
intensity_lower_threshold_percent = 30.0

// Power Port
minimum_voltage = 3.3 // V
assumed_power_consumption = 0.07 //W
